<?php
/**
 * Custom Hook: Points based on custom view
 * Register the hook so myCRED can load it.
 * @since 1.0
 * @version 1.1
 */
add_filter( 'mycred_setup_hooks', 'mycredpro_register_custom_view_hook' , 10, 2 );
function mycredpro_register_custom_view_hook( $installed, $category ) {

	$installed['view_ct_content'] = array(
		'title'       => __( '%plural% for Viewing Category Content', 'mycred' ),
		'description' => __( 'Award %_plural% to users for a selected post type where the amount of points is solely based on the category associated with the post.', 'mycred' ),
		'callback'    => array( 'myCRED_Hook_Custom_View' )
	);
	
	return $installed;
	
	$category = is_category();
	
	return $category;

}

/**
 * Custom Hook: Load custom hook
 * Since 1.6, this would be the proper way to add in the hook class from a theme file
 * or from a plugin file.
 * @since 1.0
 * @version 1.0
 */
add_action( 'mycred_load_hooks', 'mycredpro_load_custom_view_hook', 10 );
function mycredpro_load_custom_view_hook() {

	class myCRED_Hook_Custom_View extends myCRED_Hook {

		/**
		 * Construct
		 */
		function __construct( $hook_prefs, $type = MYCRED_DEFAULT_TYPE_KEY ) {
		    
			$defaults = array(
				'post'    => array(
					'creds'   => 1,
					'log'     => '%plural% for viewing a post category',
					'acreds'  => 1,
					'limit'   => '0/x',
					'alog'    => '%plural% for view of your post category',
					'visitor' => 0,
					'alimit'  => '0/x',
					'taxonomy' => 'category'
				),
			);
			
			if ( isset( $hook_prefs['view_ct_contents'] ) )
				$defaults = $hook_prefs['view_ct_contents'];

			parent::__construct( array(
				'id'       => 'view_ct_contents',
				'defaults' => $defaults
			), $hook_prefs, $type );

		}
		
		/**
		 * Run
		 * @since 1.5.1
		 * @version 1.0.1
		 */
		public function run() {
			add_action( 'template_redirect', array( $this, 'post_category' ), 10 );
		}
		
		/**
		 * Post Category Hook
		 * @since 1.0
		 * @version 1.0
		 */
		public function post_category() {
			
			// Only applicable on single post type view by logged in users
			if ( ! is_singular() || ! is_user_logged_in() ) return;

			global $post;

			$user_id    = get_current_user_id();
			$pay_author = true;
			$data       = array( 'ref_type' => 'post' );

			// Post author can not generate points for themselves
			if ( $post->post_author == $user_id ) return;

			// Make sure this post type award points. Any amount but zero.
			if ( isset( $this->prefs[ $post->post_type ]['creds'] ) && $this->prefs[ $post->post_type ]['creds'] != 0 && apply_filters( 'mycred_view_ct_content', true, $this ) === true ) {

				// Make sure we are not excluded
				if ( ! $this->core->exclude_user( $user_id ) ) {

					// Enforce limit and make sure users only get points once per unique post
					if ( ! $this->over_hook_limit( $post->post_type, 'view_ct_content', $user_id ) && ! $this->core->has_entry( 'view_ct_content', $post->ID, $user_id, $data, $this->mycred_type ) ) {

						$this->core->add_creds(
							'view_ct_content',
							$user_id,
							$this->prefs[ $post->post_type ]['creds'],
							$this->prefs[ $post->post_type ]['log'],
							$post->ID,
							$data,
							$this->mycred_type
						);

					}

					// If the visitor does not get points, neither does the author
					else $pay_author = false;

				}

			}

			// Make sure this post type award points to the author. Any amount but zero.
			if ( isset( $this->prefs[ $post->post_type ]['acreds'] ) && $this->prefs[ $post->post_type ]['acreds'] != 0 && apply_filters( 'mycred_view_ct_content_author', $pay_author, $this ) === true ) {

				// No payout for viewing our own content
				if ( ! $this->core->exclude_user( $post->post_author ) ) {

					$data['cui'] = $user_id;

					// Limit
					if ( ! $this->over_hook_limit( $post->post_type, 'view_ct_content_author', $post->post_author ) )
						$this->core->add_creds(
							'view_ct_content_author',
							$post->post_author,
							$this->prefs[ $post->post_type ]['acreds'],
							$this->prefs[ $post->post_type ]['alog'],
							$post->ID,
							$data,
							$this->mycred_type
						);

				}

			}

		}
		
		/**
		 * Preference for Viewing Content Hook
		 * @since 1.0
		 * @version 1.0
		 */
		public function preferences() {

			$prefs = $this->prefs;

?>
<div class="hook-instance">
	<h3><?php _e( 'Viewing Posts', 'mycred' ); ?></h3>
	<div class="row">
		<div class="col-lg-2 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post' => 'creds' ) ); ?>"><?php _e( 'Member', 'mycred' ); ?></label>
				<input type="text" name="<?php echo $this->field_name( array( 'post' => 'creds' ) ); ?>" id="<?php echo $this->field_id( array( 'post' => 'creds' ) ); ?>" value="<?php echo $this->core->number( $prefs['post']['creds'] ); ?>" class="form-control" />
			</div>
		</div>
		<div class="col-lg-4 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post', 'limit' ) ); ?>"><?php _e( 'Limit', 'mycred' ); ?></label>
				<?php echo $this->hook_limit_setting( $this->field_name( array( 'post', 'limit' ) ), $this->field_id( array( 'post', 'limit' ) ), $prefs['post']['limit'] ); ?>
			</div>
		</div>
		<div class="col-lg-2 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post' => 'acreds' ) ); ?>"><?php _e( 'Content Author', 'mycred' ); ?></label>
				<input type="text" name="<?php echo $this->field_name( array( 'post' => 'acreds' ) ); ?>" id="<?php echo $this->field_id( array( 'post' => 'acreds' ) ); ?>" value="<?php echo $this->core->number( $prefs['post']['acreds'] ); ?>" class="form-control" />
			</div>
		</div>
		<div class="col-lg-4 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post', 'alimit' ) ); ?>"><?php _e( 'Limit', 'mycred' ); ?></label>
				<?php echo $this->hook_limit_setting( $this->field_name( array( 'post', 'alimit' ) ), $this->field_id( array( 'post', 'alimit' ) ), $prefs['post']['alimit'] ); ?>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post' => 'log' ) ); ?>"><?php _e( 'Member Log Template', 'mycred' ); ?></label>
				<input type="text" name="<?php echo $this->field_name( array( 'post' => 'log' ) ); ?>" id="<?php echo $this->field_id( array( 'post' => 'log' ) ); ?>" placeholder="<?php _e( 'required', 'mycred' ); ?>" value="<?php echo esc_attr( $prefs['post']['log'] ); ?>" class="form-control" />
				<span class="description"><?php echo $this->available_template_tags( array( 'general', 'post' ) ); ?></span>
			</div>
		</div>
		<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
			<div class="form-group">
				<label for="<?php echo $this->field_id( array( 'post' => 'alog' ) ); ?>"><?php _e( 'Content Author Log Template', 'mycred' ); ?></label>
				<input type="text" name="<?php echo $this->field_name( array( 'post' => 'alog' ) ); ?>" id="<?php echo $this->field_id( array( 'post' => 'alog' ) ); ?>" placeholder="<?php _e( 'required', 'mycred' ); ?>" value="<?php echo esc_attr( $prefs['post']['alog'] ); ?>" class="form-control" />
				<span class="description"><?php echo $this->available_template_tags( array( 'general', 'post' ) ); ?></span>
			</div>
		</div>
	</div>
</div>
<label class="subheader"><?php _e( 'Category', 'mycred' ); ?></label>
<ol>
	<li>
		<div class="h2"><input type="text" name="<?php echo $this->field_name( 'category' ); ?>" id="<?php echo $this->field_id( 'category' ); ?>" value="<?php echo esc_attr( $prefs['category'] ); ?>" class="long" /></div>
	</li>
</ol>
<?php
				// Points to award/deduct
				if ( isset( $prefs[ $post_type->name ]['acreds'] ) )
					$_acreds = $prefs[ $post_type->name ]['acreds'];
				else
					$_acreds = 0;

				if ( isset( $prefs[ $post_type->name ]['alimit'] ) )
					$alimit = $prefs[ $post_type->name ]['alimit'];
				else
					$alimit = '0/x';

				// Log template
				if ( isset( $prefs[ $post_type->name ]['alog'] ) )
					$_alog = $prefs[ $post_type->name ]['alog'];
				else
					$_alog = '%plural% for view of your ' . $post_type->labels->name;

?>
<?php
		}

	}

	/**
		 * Sanitise Preferences
		 * @since 1.6
		 * @version 1.0.1
		 */
		function sanitise_preferences( $data ) {
			
			if ( isset( $data['post']['alimit'] ) && isset( $data['post']['alimit_by'] ) ) {
				$limit = sanitize_text_field( $data['post']['alimit'] );
				if ( $limit == '' ) $limit = 0;
				$data['post']['alimit'] = $limit . '/' . $data['post']['alimit_by'];
				unset( $data['post']['alimit_by'] );
			}
			
			if ( isset( $data['category']['alimit'] ) && isset( $data['category']['alimit_by'] ) ) {
		
		$limit = sanitize_text_field( $data['category']['alimit'] );
				if ( $limit == '' ) $limit = 0;
				$data['category']['alimit'] = $limit . '/' . $data['category']['alimit_by'];
				unset( $data['category']['alimit_by'] );
			}

			return $data;

		}

	}
?>
